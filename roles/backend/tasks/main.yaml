- name: disaible nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: latest
  loop:
  - nodejs
  - mysql

- name: create user
  ansible.builtin.user:
    name: expense

- name: run coomon file
  tags:
    - deployment
  ansible.builtin.import_role:
    name: common
    tasks_from: common.yaml
    

- name: npm insatll
  tags:
    - deployment
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copy the files
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: deamon reloaded
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: start and enable
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes

- name: insatll python dependeces
  ansible.builtin.pip:
    name:
    - PyMySql
    - cryptography
    executable: pip3.9

- name: load schema
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ login_password }}"
    login_host: " {{ login_host }}"
    target: /app/schema/backend.sql
    state: import
    name: all

- name: restart backend
  tags:
    - deployment
  ansible.builtin.service:
    name: backend
    state: restarted